import numpy as np Importar módulo numpy como np

np.array(lista) Convierte una lista en un ector numpy de datos

variable_array + [escalar] Suma un escalar a un array completo

np.array(lista, dtype='float') Crea un array de tipo float a partir de una lista

variable_array.astype('int') Convierte un array a tipo entero

variable_array.astype('object') Convierte un array a tipo genérico, se le puede ingresar cualquier tipo de dato

variable_array.tolist() Convierte el array a una lista

variable_array.shape Muestra la cantidad de filas y columnas del array

variable_array.dtype Muestra el tipo de datos del array

variable_array.size Muestra cuántos datos hay en cada dimensión del array

variable_array.ndim Muestra la cantidad de dimensiones del array

variable_array[:numero_filas, :numero_columnas] Extrae las primeras numero_filas filas y numero_columnas columnas

condicion = variable_array > numero Genera un array booleano segun la condición especificada

variable_array[condicion] Genera un array que toma los valores verdaderos de acuerdo a la condición en el array que se está trabajando

variable_array[::-1, ] Invierte toda las posiciones de las filas

variable_array[::-1, ::-1] Invierte todas las posiciones de las filas y de las columnas

np.nan Not a number

np.inf Infinito

np.isnan(variable_array) Genera un array booleano según los elementos sean Not a Number

np.isinf(variable_array) Genera un array booleano según los elementos sean infinitos

variable_array.mean() Obtiene el promedio

variable_array.max() Obtiene máximo del array completo

variable_array.min() Obtiene el mínimo del array completo

np.amin(variable_array, axis = 0) Obtiene el mínimo por columnas

np.amin(variable_array, axis = 1) Obtiene el mínimo por filas

np.cumsum(variable_array) Obtiene la suma acumulada

variable_array_1 = variable_array_2.copy() Copia el array variable_array_2 en variable_array_1, los cambios en variable_array_2 no se reflejan en variable_array_1

variable_array.reshape(numero_filas, numero_columnas) Cambia la forma de variable_array a numero_filas filas y numero_columnas columnas

variable_array_1 = variable_array_2.flatten() Convierte el array en un array unidimensional plano, pero si se edita variable_array_2 se refleja el cambio en variable_array_1

variable_array_1 = variable_array_2.ravel() Convierte el array en un array unidimensional plano, si se edita variable_array_2 NO se refleja el cambio en variable_array_1

np.arange(numero) Secuencia desde cero hasta el número numero

np.arange(numero_inicio,numero_termino) Secuencia desde numero_inicio hasta numero_termino

np.arange(numero_inicio,numero_termino, paso) Secuencia desde numero_inicio hasta numero_termino con un paso entre números consecutivos

np.arange(numero_inicio_mayor,numero_termino_menor, paso_negativo) Secuencia desde numero_inicio_mayor hasta numero_termino_menor con un paso_negativo entre números consecutivos lo hace decreciente

np.linspace(start=numero_inicio, stop=numero_termino, num=numero_elementos, dtype = int) Secuencia de cantidad numero_elementos entre numero_inicio y numero_termino de tipo int

np.set_printoptions(precision=cantidad_numeros_precision) Ajusta la precisión de números decimales a cantidad_numeros_precision dígitos

np.ones([numero_filas, numero_colummnas]) Crea un array de unos con numero_filas cantidad de filas y numero_colummnas cantidad de columnas

np.zeros([numero_filas, numero_colummnas]) Crea un array de ceros con numero_filas cantidad de filas y numero_colummnas cantidad de columnas

np.tile(variable_array, cantidad_repeticiones) Crea un array que se compone de variable_array repetida cantidad_repeticiones veces

np.repeat(variable_array, cantidad_repeticiones) Crea un array que repite cada uno de los elementos de variable_array cantidad_repeticiones veces

np.random.rand(numero_filas, numero_columnas) Crea un array aleatorio de numero_filas filas y numero_columnas columnas

np.random.randn(numero_filas, numero_columnas) Crea un array aleatorio con promedio 0 y varianza 1 de forma numero_filas filas y numero_columnas columnas














